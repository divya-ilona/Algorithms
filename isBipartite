check the given graph is bipartite or not

#include <bits/stdc++.h>
using namespace std;

void bfs()
{
	int n,m;
	cin>>n>>m;
	int bipartite=1;
	vector<vector<int>>edge(n);
	for(int i=0;i<m;i++)
	{
		int u,v;
		cin>>u>>v;
		edge[u].push_back(v);
		edge[v].push_back(u);
	}
	queue<int>q;
	vector<int>vis(n,-1);
	q.push(0);
	vis[0]=0;
	while(!q.empty())
	{
		int sz=q.size();
		for(int i=0;i<sz;i++)
		{
			int cur=q.front();
			q.pop();
			for(auto x:edge[cur])
			{
				if(vis[x]==-1)
				{
					q.push(x);
					vis[x]=!vis[node];
				}
				else if(vis[x]!=!vis[node])
				{
					bipartite=0;break;
				}
			}
		}
	}
	cout<<bipartite;
}
int main()
{
	int t;
	while(t--)
		bfs();
}