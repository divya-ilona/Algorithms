Given a list of edges Do BFS on undirected graph to detect cycle

#include <bits/stdc++.h>
using namespace std;

void bfs()
{
	int n,m;
	cin>>n>>m;
	int cycle=0;
	vector<vector<int>>edge(n);
	for(int i=0;i<m;i++)
	{
		int u,v;
		edge[u].push_back(v);
		edge[v].push_back(u);
	}
	queue<int>q;
	vector<int>vis(n,0);
	q.push(0);
	vis[0]=1;
	while(!q.empty())
	{
		int cur=q.front();
		q.pop();
		if(vis[cur])
		{
			cycle=1;break;
		}
		for(auto x:edge[cur])
		{
			if(!vis[x])
			{
				q.push(x);
				vis[x]=1;
			}
		}
	}
	cout<<cycle;
}
int main()
{
	int t;
	while(t--)
		bfs();
}